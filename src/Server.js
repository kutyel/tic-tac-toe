// Generated by BUCKLESCRIPT VERSION 3.0.0, PLEASE EDIT WITH CARE
'use strict';

var Block = require("bs-platform/lib/js/block.js");
var Curry = require("bs-platform/lib/js/curry.js");
var Server$BsSocket = require("bs-socket/src/Server.bs.js");
var Common$TicTacToe = require("./Common.js");

var Server = Server$BsSocket.Make([Common$TicTacToe.stringify]);

var conns = [0];

var store = [Common$TicTacToe.initialState(/* X */0)];

function getPlayer(x) {
  var match = x % 2 === 0;
  if (match) {
    return /* O */1;
  } else {
    return /* X */0;
  }
}

function startSocketIOServer(http) {
  var io = Curry._1(Server[/* createWithHttp */1], http);
  return Curry._2(Server[/* onConnect */16], io, (function (socket) {
                conns[0] = conns[0] + 1 | 0;
                console.log("Connected!");
                var init = store[0];
                Curry._3(Server[/* Socket */15][/* emit */4], socket, /* Message */0, /* NewState */Block.__(0, [/* record */[
                          /* grid */init[/* grid */0],
                          /* turn */init[/* turn */1],
                          /* you */getPlayer(conns[0]),
                          /* winner */init[/* winner */3]
                        ]]));
                return Curry._3(Server[/* Socket */15][/* on */3], socket, /* Message */0, (function (action) {
                              store[0] = Common$TicTacToe.updateState(action, store[0]);
                              return Curry._3(Server[/* Socket */15][/* broadcast */5], socket, /* Message */0, action);
                            }));
              }));
}

exports.Server = Server;
exports.conns = conns;
exports.store = store;
exports.getPlayer = getPlayer;
exports.startSocketIOServer = startSocketIOServer;
/* Server Not a pure module */
